<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Waste Wizard</title>
  <style>
    body { font-family: sans-serif; text-align: center; }
    canvas { border: 1px solid #ccc; margin: 10px auto; display: block; }
    #label-container div { margin: 6px 0; font-size: 18px; }
  </style>
</head>
<body>
  <h1>Waste Wizard</h1>
  <p>Point your webcam at an item and let the AI sort it!</p>
  <div id="webcam-container"></div>
  <div id="label-container"></div>

  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest"></script>
  <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@latest"></script>

  <script type="text/javascript">
    const URL = "https://teachablemachine.withgoogle.com/models/7Lyz9kcS0/";
    let model, webcam, labelContainer, maxPredictions;

    async function init() {
      const modelURL = URL + "model.json";
      const metadataURL = URL + "metadata.json";
      model = await tmImage.load(modelURL, metadataURL);
      maxPredictions = model.getTotalClasses();

      webcam = new tmImage.Webcam(224, 224, true); // width, height, flip
      await webcam.setup();
      await webcam.play();
      document.getElementById("webcam-container").appendChild(webcam.canvas);

      labelContainer = document.getElementById("label-container");
      for (let i = 0; i < maxPredictions; i++) {
        labelContainer.appendChild(document.createElement("div"));
      }

      window.requestAnimationFrame(loop);
    }

    async function loop() {
      webcam.update();
      await predict();
      window.requestAnimationFrame(loop);
    }

    async function predict() {
      const prediction = await model.predict(webcam.canvas);
      prediction.forEach((p, i) => {
        labelContainer.childNodes[i].innerHTML =
          `${p.className}: ${(p.probability * 100).toFixed(2)}%`;
      });
    }

    init();
  </script>
</body>
</html>
